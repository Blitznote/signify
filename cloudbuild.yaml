tags: ['c', 'cmake', 'security']

steps:
- name: 'gcr.io/cloud-builders/docker'
  id: 'build container with gcc'
  args: ['build', '--file=Dockerfile.buildenv', '--tag=localhost/cloud-builders/cmake', '.']

- name: 'localhost/cloud-builders/cmake'
  id: 'compile with gcc'
  waitFor: ['build container with gcc']
  env: ['CFLAGS=-Os']
  dir: 'build'
  entrypoint: 'bash'
  args:
  - -c
  - |
    cmake -GNinja ..;
    ninja

- name: 'localhost/cloud-builders/cmake'
  id: 'test'
  entrypoint: 'bash'
  args: ['test/runner.sh', 'build/signify']

- name: 'gcr.io/cloud-builders/docker'
  id: 'build container with clang'
  args: ['build', '--file=Dockerfile.buildenv-clang', '--tag=localhost/cloud-builders/cmake:clang', '.']

- name: 'localhost/cloud-builders/cmake:clang'
  id: 'compile with clang'
  waitFor: ['build container with clang']
  env: ['CFLAGS=-Os']
  dir: 'build-clang'
  entrypoint: 'bash'
  args:
  - -c
  - |
    cmake -GNinja ..;
    ninja

- name: 'mirror.gcr.io/library/ubuntu'
  id: 'package deb'
  waitFor: ['test']
  env: ['VERSION=1.106.3']
  entrypoint: 'bash'
  args:
  - -c
  - |
    mkdir -p .release/{DEBIAN,usr/bin,usr/share/man/man1};
    mv build/signify .release/usr/bin/;
    cat signify.1 | bzip2 -9c >.release/usr/share/man/man1/signify.1.bz2;
    cp -a debian/* .release/DEBIAN/;
    sed -i \
      -e "/^Version/c\Version\x3a $${VERSION}" \
      -e "/^Architecture/c\Architecture\x3a $(dpkg --print-architecture)" \
      -e "/^Installed-Size/c\Installed-Size\x3a $(find .release/usr -type f -print0 | du -sc --apparent-size --files0-from=- | tail -n 1 | cut -f 1)" \
      .release/DEBIAN/control;
    dpkg-deb -Znone --build .release "signify-linux_$${VERSION}_$(dpkg --print-architecture).deb";
    dpkg --info "signify-linux_$${VERSION}_$(dpkg --print-architecture).deb";

#artifacts:
#  objects:
#    location: 'gs://some-bucket/some-dir/'
#    paths: ['signify*.deb']
